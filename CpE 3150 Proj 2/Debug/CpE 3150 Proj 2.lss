
CpE 3150 Proj 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000172  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000011e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000172  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000abe  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009f9  00000000  00000000  00000cd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002c9  00000000  00000000  000016cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001994  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004e0  00000000  00000000  000019d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  00001eb8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 86 00 	call	0x10c	; 0x10c <main>
  bc:	0c 94 8d 00 	jmp	0x11a	; 0x11a <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <freq_delay>:
	TIFR1 = 1<<TOV1;
}

	
void freq_delay(){
		TCNT0 = -63;
  c4:	81 ec       	ldi	r24, 0xC1	; 193
  c6:	86 bd       	out	0x26, r24	; 38
		TCCR0B = 0b00000011;
  c8:	83 e0       	ldi	r24, 0x03	; 3
  ca:	85 bd       	out	0x25, r24	; 37
		while(!(TIFR0 & (1<<TOV0)));
  cc:	a8 9b       	sbis	0x15, 0	; 21
  ce:	fe cf       	rjmp	.-4      	; 0xcc <freq_delay+0x8>
		TCCR0B = 0x00;
  d0:	15 bc       	out	0x25, r1	; 37
		TIFR0 = 1<<TOV0;
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	85 bb       	out	0x15, r24	; 21
  d6:	08 95       	ret

000000d8 <beep>:
{
	
}*/

void beep() {
	DDRC |= 0b01000000;
  d8:	87 b1       	in	r24, 0x07	; 7
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	87 b9       	out	0x07, r24	; 7
	TCNT1H = -0x61;
  de:	8f e9       	ldi	r24, 0x9F	; 159
  e0:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
	TCNT1L = 0xBE;
  e4:	8e eb       	ldi	r24, 0xBE	; 190
  e6:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	TCCR1B = 0b00000011; 
  ea:	83 e0       	ldi	r24, 0x03	; 3
  ec:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	while(!(TIFR1 & (1<<TOV1))){
  f0:	06 c0       	rjmp	.+12     	; 0xfe <beep+0x26>
		freq_delay();
  f2:	0e 94 62 00 	call	0xc4	; 0xc4 <freq_delay>
		PORTC ^= 0b01000000;	
  f6:	98 b1       	in	r25, 0x08	; 8
  f8:	80 e4       	ldi	r24, 0x40	; 64
  fa:	89 27       	eor	r24, r25
  fc:	88 b9       	out	0x08, r24	; 8
void beep() {
	DDRC |= 0b01000000;
	TCNT1H = -0x61;
	TCNT1L = 0xBE;
	TCCR1B = 0b00000011; 
	while(!(TIFR1 & (1<<TOV1))){
  fe:	b0 9b       	sbis	0x16, 0	; 22
 100:	f8 cf       	rjmp	.-16     	; 0xf2 <beep+0x1a>
		freq_delay();
		PORTC ^= 0b01000000;	
	}
	TCCR1B = 0x00;
 102:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIFR1 = 1<<TOV1;
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	86 bb       	out	0x16, r24	; 22
 10a:	08 95       	ret

0000010c <main>:

int main(void)
{
    while(1)
	{
		if(PIND & (1<<4)) // button get pressed
 10c:	4c 9b       	sbis	0x09, 4	; 9
 10e:	fe cf       	rjmp	.-4      	; 0x10c <main>
		{
			beep(); // beep time
 110:	0e 94 6c 00 	call	0xd8	; 0xd8 <beep>
			while(PIND & (1<<4)); // waiting for button depress
 114:	4c 99       	sbic	0x09, 4	; 9
 116:	fe cf       	rjmp	.-4      	; 0x114 <main+0x8>
 118:	f9 cf       	rjmp	.-14     	; 0x10c <main>

0000011a <_exit>:
 11a:	f8 94       	cli

0000011c <__stop_program>:
 11c:	ff cf       	rjmp	.-2      	; 0x11c <__stop_program>
