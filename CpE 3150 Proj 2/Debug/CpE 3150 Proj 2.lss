
CpE 3150 Proj 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000016c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b5e  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a63  00000000  00000000  00000db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000392  00000000  00000000  00001819  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001bac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000533  00000000  00000000  00001be0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000076  00000000  00000000  00002113  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00002189  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 7a 00 	call	0xf4	; 0xf4 <main>
  bc:	0c 94 b4 00 	jmp	0x168	; 0x168 <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <beep>:
{
    
}*/

void beep() {
    DDRC |= 0b01000000;
  c4:	87 b1       	in	r24, 0x07	; 7
  c6:	80 64       	ori	r24, 0x40	; 64
  c8:	87 b9       	out	0x07, r24	; 7
    TCNT0 = -0xFF;
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	86 bd       	out	0x26, r24	; 38
    TCCR0B = 0b00000101;
  ce:	85 e0       	ldi	r24, 0x05	; 5
  d0:	85 bd       	out	0x25, r24	; 37
    
    while(!(TIFR0 & (1<<TOV0))){
  d2:	0a c0       	rjmp	.+20     	; 0xe8 <beep+0x24>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d4:	8f ec       	ldi	r24, 0xCF	; 207
  d6:	97 e0       	ldi	r25, 0x07	; 7
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <beep+0x14>
  dc:	00 c0       	rjmp	.+0      	; 0xde <beep+0x1a>
  de:	00 00       	nop
        _delay_ms(1);
        PORTC ^= 0b01000000;    
  e0:	98 b1       	in	r25, 0x08	; 8
  e2:	80 e4       	ldi	r24, 0x40	; 64
  e4:	89 27       	eor	r24, r25
  e6:	88 b9       	out	0x08, r24	; 8
void beep() {
    DDRC |= 0b01000000;
    TCNT0 = -0xFF;
    TCCR0B = 0b00000101;
    
    while(!(TIFR0 & (1<<TOV0))){
  e8:	a8 9b       	sbis	0x15, 0	; 21
  ea:	f4 cf       	rjmp	.-24     	; 0xd4 <beep+0x10>
        _delay_ms(1);
        PORTC ^= 0b01000000;    
    }
    TCCR0B = 0x00;
  ec:	15 bc       	out	0x25, r1	; 37
    TIFR0 = 1<<TOV0;
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	85 bb       	out	0x15, r24	; 21
  f2:	08 95       	ret

000000f4 <main>:

int main(void)
{
    while(1)
    {
        TCNT1H = -0xF4;
  f4:	8c e0       	ldi	r24, 0x0C	; 12
  f6:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
        TCNT1L = 0x24;
  fa:	84 e2       	ldi	r24, 0x24	; 36
  fc:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
        TCCR1B = 0b00000100;
 100:	84 e0       	ldi	r24, 0x04	; 4
 102:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
        
        while(!(TIFR1 & (1<<TOV1)))
 106:	27 c0       	rjmp	.+78     	; 0x156 <main+0x62>
        {
            TCNT3H = -0x30;
 108:	80 ed       	ldi	r24, 0xD0	; 208
 10a:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7f8095>
            TCNT3L = 0xD4;
 10e:	84 ed       	ldi	r24, 0xD4	; 212
 110:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <__TEXT_REGION_LENGTH__+0x7f8094>
            TCCR3B = 0b00000011;
 114:	83 e0       	ldi	r24, 0x03	; 3
 116:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7f8091>
            while (!(TIFR3 & (1<<TOV3)))
 11a:	17 c0       	rjmp	.+46     	; 0x14a <main+0x56>
            {
            
                if(PIND & (1<<4)) // button get pressed
 11c:	4c 9b       	sbis	0x09, 4	; 9
 11e:	15 c0       	rjmp	.+42     	; 0x14a <main+0x56>
                {
                    int hold_low = TCNT1L;
 120:	c0 91 84 00 	lds	r28, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
                    int hold_high = TCNT1H;
 124:	d0 91 85 00 	lds	r29, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
                    beep(); // beep time
 128:	0e 94 62 00 	call	0xc4	; 0xc4 <beep>
                    while(PIND & (1<<4)); // waiting for button depress
 12c:	4c 99       	sbic	0x09, 4	; 9
 12e:	fe cf       	rjmp	.-4      	; 0x12c <main+0x38>
 130:	06 c0       	rjmp	.+12     	; 0x13e <main+0x4a>
                    
                    while (!(PIND & (1<<4)))
                    {
						TCNT1H = hold_high;
 132:	d0 93 85 00 	sts	0x0085, r29	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
						TCNT1L = hold_low;
 136:	c0 93 84 00 	sts	0x0084, r28	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
						TIFR1 = 1<<TOV1;
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	86 bb       	out	0x16, r24	; 22
                    int hold_low = TCNT1L;
                    int hold_high = TCNT1H;
                    beep(); // beep time
                    while(PIND & (1<<4)); // waiting for button depress
                    
                    while (!(PIND & (1<<4)))
 13e:	4c 9b       	sbis	0x09, 4	; 9
 140:	f8 cf       	rjmp	.-16     	; 0x132 <main+0x3e>
                    {
						TCNT1H = hold_high;
						TCNT1L = hold_low;
						TIFR1 = 1<<TOV1;
                    }
					beep();
 142:	0e 94 62 00 	call	0xc4	; 0xc4 <beep>
					while(PIND & (1<<4));
 146:	4c 99       	sbic	0x09, 4	; 9
 148:	fe cf       	rjmp	.-4      	; 0x146 <main+0x52>
        while(!(TIFR1 & (1<<TOV1)))
        {
            TCNT3H = -0x30;
            TCNT3L = 0xD4;
            TCCR3B = 0b00000011;
            while (!(TIFR3 & (1<<TOV3)))
 14a:	c0 9b       	sbis	0x18, 0	; 24
 14c:	e7 cf       	rjmp	.-50     	; 0x11c <main+0x28>
					beep();
					while(PIND & (1<<4));
                }
        
            }
            TCCR3B = 0x00;
 14e:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7f8091>
            TIFR3 = 1<<TOV3;
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	88 bb       	out	0x18, r24	; 24
    {
        TCNT1H = -0xF4;
        TCNT1L = 0x24;
        TCCR1B = 0b00000100;
        
        while(!(TIFR1 & (1<<TOV1)))
 156:	b0 9b       	sbis	0x16, 0	; 22
 158:	d7 cf       	rjmp	.-82     	; 0x108 <main+0x14>
        
            }
            TCCR3B = 0x00;
            TIFR3 = 1<<TOV3;
        }
        TCCR1B = 0x00;
 15a:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
        TIFR1 = 1<<TOV1;
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	86 bb       	out	0x16, r24	; 22

        beep(); // makes speaker go brrrrrrrrr
 162:	0e 94 62 00 	call	0xc4	; 0xc4 <beep>
    }
 166:	c6 cf       	rjmp	.-116    	; 0xf4 <main>

00000168 <_exit>:
 168:	f8 94       	cli

0000016a <__stop_program>:
 16a:	ff cf       	rjmp	.-2      	; 0x16a <__stop_program>
